!function(e,t){"function"==typeof define&&define.amd?define([],function(){return e.changed=t()}):e.changed=t()}(this,function(){"use strict";smokesignals={convert:function(e,t){return t={},e.on=function(n,o){return(t[n]||(t[n]=[])).push(o),e},e.once=function(t,n){function o(){n.apply(e.off(t,o),arguments)}return o.h=n,e.on(t,o)},e.off=function(n,o){for(var r=t[n],i=0;o&&r&&r[i];i++)r[i]!=o&&r[i].h!=o||r.splice(i--,1);return i||delete t[n],e},e.emit=function(n){for(var o=t[n],r=0;o&&o[r];)o[r++].apply(e,o.slice.call(arguments,1));return e},e}};var e=window,t=document,n=(t.documentElement,!!(e.MutationObserver||e.WebKitMutationObserver||e.MozMutationObserver)),o="onpropertychange"in document.createElement("div"),r=1,i="DOMContentLoaded",s=function(){smokesignals.convert(this)},u=function(){var e=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver||null,t={childList:!0,subtree:!0},n=function(e){smokesignals.convert(this),this._selector=e,document.addEventListener(i,this._init.bind(this))};return n.prototype._init=function(){this._observer=new e(this._onMutation.bind(this)),this._observer.observe(document.body,t)},n.prototype._onMutation=function(e){e.some(this._isElementMutation,this)&&this.emit(r)},n.prototype._isElementMutation=function(e){return null!==e.addedNodes||null!==e.removedNodes},n}(),c=function(){smokesignals.convert(this)},a={createObserver:function(){var e;return console.log("Created Observer: "),n?(e=u,console.log("native")):o?(e=c,console.log("IE")):(e=s,console.log("Fake")),new e}},l=function(){var e=a.createObserver(),t=function(t){smokesignals.convert(this),this._selector=t,e.on(r,this._onMutate.bind(this))};return t.prototype._onMutate=function(){console.log("Dat dom changed!!!")},t.prototype.getElements=function(){var e=document.querySelectorAll(this._selector);return Array.prototype.slice.call(e)},t}(),d={watch:function(e){return new l(e)}};return d});